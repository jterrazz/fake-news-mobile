---
description: Enforces detailed testing standards, structure, naming conventions, and Jest configuration.
globs: **test**
alwaysApply: false
---
## Directory Structure

- **Unit tests**: Located alongside source files using `__tests__/`, using `.test.ts`
- **Integration tests**: Located under `__tests__/integration`, using `.test.ts`
- **End-to-End tests**: Located under `__tests__/e2e`, using `.e2e.ts`
- **Fixtures**: Located in `__tests__/__fixtures__/`

## File Organization

Tests should follow this clear order depending on requirements:

1. Imports
2. Mocks
3. Test data
4. Setup (beforeAll then beforeEach)
5. Cleanup (afterEach then afterAll)
6. Test suites (`describe`)

## Naming Conventions

- Unit tests: `[component-name].test.ts`
- Integration tests: `[use-case-name].test.ts`
- E2E tests: `[scenario-name].e2e.ts`

## Test Structure

- `describe`
- `it` statements clearly structured with "it should"

## Dependencies

- jest (latest)
- ts-jest (latest)
- jest-mock-extended (latest)
- mswjs for mocking api calls (latest)

## Best Practices

- Write tests following Given/When/Then clearly with // Given // When // Then
- Use jest fake timers for date related mocks
- Keep tests fast, isolated, and maintainable
- Clearly differentiate between expected and unexpected errors
